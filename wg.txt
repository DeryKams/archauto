# Обновляем систему и ставим нужные пакеты
sudo apt update && sudo apt upgrade -y
sudo apt install wireguard ufw curl -y

# Настраиваем простой файрвол, открываем только нужные порты
sudo ufw allow ssh      # Порт для подключения к серверу
sudo ufw allow 443/tcp  # Порт для нашего замаскированного туннеля
sudo ufw enable         # Включаем файрвол

# Генерируем ключи для сервера
umask 077
wg genkey | sudo tee /etc/wireguard/privatekey | wg pubkey | sudo tee /etc/wireguard/publickey

# Создаем конфигурационный файл /etc/wireguard/wg0.conf
sudo tee /etc/wireguard/wg0.conf > /dev/null <<EOF
[Interface]
# Привязываем WireGuard к локальному интерфейсу, чтобы он не был виден извне
ListenPort = 51820 
PrivateKey = $(sudo cat /etc/wireguard/privatekey)
Address = 10.10.0.1/24

# Правила для NAT, чтобы клиенты могли выходить в интернет через сервер
PostUp = iptables -A FORWARD -i %i -j ACCEPT; iptables -t nat -A POSTROUTING -o $(ip -4 route ls | grep default | grep -Po '(?<=dev )(\S+)' | head -1) -j MASQUERADE
PostDown = iptables -D FORWARD -i %i -j ACCEPT; iptables -t nat -D POSTROUTING -o $(ip -4 route ls | grep default | grep -Po '(?<=dev )(\S+)' | head -1) -j MASQUERADE

# Место для первого клиента. PublicKey добавим позже.
[Peer]
# PublicKey = 
AllowedIPs = 10.10.0.2/32
EOF

# Включаем форвардинг пакетов
echo "net.ipv4.ip_forward=1" | sudo tee /etc/sysctl.d/99-wireguard.conf
sudo sysctl -p /etc/sysctl.d/99-wireguard.conf

# Запускаем WireGuard
sudo systemctl enable wg-quick@wg0
sudo systemctl start wg-quick@wg0

# Устанавливаем Xray с помощью официального скрипта
bash -c "$(curl -L https://github.com/xtls/Xray-install/raw/main/install-release.sh)" @ install

# Генерируем ключи для XTLS-Reality
xray x25519

# Создаем конфиг Xray. ЗАМЕНИТЕ your.domain.com, UUID, и privateKey
# UUID можно сгенерировать командой: xray uuid
sudo tee /usr/local/etc/xray/config.json > /dev/null <<EOF
{
    "log": {
        "loglevel": "warning"
    },
    "inbounds": [
        {
            "listen": "0.0.0.0",
            "port": 443,
            "protocol": "vless",
            "settings": {
                "clients": [
                    {
                        "id": "ВАШ_UUID_ЗДЕСЬ", // Замените на сгенерированный
                        "flow": "xtls-rprx-vision"
                    }
                ],
                "decryption": "none"
            },
            "streamSettings": {
                "network": "tcp",
                "security": "reality",
                "realitySettings": {
                    "show": false,
                    "dest": "www.google.com:443", // Сайт-приманка. Можно указать www.microsoft.com:443
                    "xver": 0,
                    "serverNames": [
                        "your.domain.com" // ВАШ ДОМЕН
                    ],
                    "privateKey": "ВАШ_ПРИВАТНЫЙ_КЛЮЧ_REALITY", // Замените на сгенерированный
                    "shortIds": [
                        "aabbccdd" // Произвольная строка
                    ]
                }
            },
            "sniffing": {
                "enabled": true,
                "destOverride": ["http", "tls"]
            }
        }
    ],
    "outbounds": [
        {
            "protocol": "freedom",
            "tag": "direct"
        },
        {
            "protocol": "freedom",
            "tag": "wg-out",
            "settings": {
                "domainStrategy": "UseIP",
                "dialerProxy": "wg-dialer"
            }
        },
        {
            "protocol": "proxy",
            "tag": "wg-dialer",
            "settings": {
                "transport": "gun",
                "server": "127.0.0.1",
                "port": 51820
            }
        }
    ],
    "routing": {
        "rules": [
            {
                "type": "field",
                "inboundTag": ["VLESS-in"],
                "protocol": ["bittorrent"],
                "outboundTag": "block"
            },
            {
                "type": "field",
                "network": "udp",
                "outboundTag": "wg-out"
            }
        ]
    }
}
EOF

# Перезапускаем Xray с новой конфигурацией
sudo systemctl restart xray
sudo systemctl status xray # Убедитесь, что он работает без ошибок

Настройка клиента
Клиентская настройка состоит из двух частей: установка и настройка клиента Xray и клиента WireGuard.
Установка клиентского ПО:
Windows: v2rayN или Nekoray.
Android: v2rayNG.
macOS: V2RayX или Nekoray.
Linux: Nekoray или Xray в консоли.
Генерация ключей WireGuard на клиенте:
Установите WireGuard для вашей ОС.
В приложении сгенерируйте пару ключей (приватный и публичный).
Отправьте свой ПУБЛИЧНЫЙ ключ администратору сервера.
Администратор добавляет ключ клиента на сервер:
Откройте /etc/wireguard/wg0.conf на сервере.
Найдите секцию [Peer] и вставьте полученный публичный ключ.
Generated ini
[Peer]
PublicKey = <ПУБЛИЧНЫЙ_КЛЮЧ_КЛИЕНТА>
AllowedIPs = 10.10.0.2/32
Use code with caution.
Ini
Перезапустите WireGuard на сервере: sudo systemctl restart wg-quick@wg0
Настройка клиента Xray (на примере v2rayN/Nekoray):
Добавьте новый сервер с типом VLESS.
Адрес: your.domain.com
Порт: 443
ID (UUID): тот же, что вы указали в config.json на сервере.
Flow: xtls-rprx-vision
Security/Encryption: reality
SNI (Server Name Indication): your.domain.com
PublicKey: публичный ключ от XTLS-Reality, который вы сгенерировали на сервере.
ShortId: тот же, что на сервере (aabbccdd).
Включите этот профиль. Клиент Xray создаст на вашем компьютере локальный прокси.
Настройка клиента WireGuard:
Создайте новый туннель.
PrivateKey: ваш клиентский приватный ключ.
Address: IP-адрес, который вам выдал администратор (10.10.0.2/32).
DNS: 8.8.8.8, 1.1.1.1 (или любой другой).
В секции [Peer]:
PublicKey: публичный ключ сервера (из файла /etc/wireguard/publickey на сервере).
AllowedIPs: 0.0.0.0/0, ::/0 (направлять весь трафик в туннель).
Endpoint: Это самое важное! Так как WireGuard теперь работает через локальный прокси, созданный Xray, эндпоинтом будет этот прокси. Однако, стандартный клиент WireGuard не поддерживает SOCKS5 прокси.
Решение для клиента:
Используйте клиент, который умеет работать с TUN/TAP адаптерами, например, NekoRay. В нем можно настроить Xray и указать, чтобы он создавал системный TUN-интерфейс, через который будет маршрутизироваться весь трафик. Это самый бесшовный метод.
Если ваш клиент не поддерживает это, вам придется использовать WireGuard в режиме "userspace" (например, wireguard-go) с утилитами типа tun2socks, что значительно сложнее. Начните с Nekoray, это самый простой путь.
После активации профиля Xray и туннеля WireGuard ваш трафик будет надежно замаскирован и защищен от блокировок.